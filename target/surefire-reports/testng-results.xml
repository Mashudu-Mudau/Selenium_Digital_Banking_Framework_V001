<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="3" total="7" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="243965" started-at="2020-07-29T10:47:21 CAT" finished-at="2020-07-29T10:51:25 CAT">
    <groups>
    </groups>
    <test name="Test" duration-ms="243965" started-at="2020-07-29T10:47:21 CAT" finished-at="2020-07-29T10:51:25 CAT">
      <class name="Scripts.SC001_testUserAuthentication">
        <test-method status="PASS" signature="report()[pri:0, instance:Scripts.SC001_testUserAuthentication@42dafa95]" name="report" is-config="true" duration-ms="213" started-at="2020-07-29T10:47:21 CAT" finished-at="2020-07-29T10:47:21 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:Scripts.SC001_testUserAuthentication@42dafa95]" name="beforeClass" is-config="true" duration-ms="7997" started-at="2020-07-29T10:47:21 CAT" finished-at="2020-07-29T10:47:29 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="method(java.lang.reflect.Method)[pri:0, instance:Scripts.SC001_testUserAuthentication@42dafa95]" name="method" is-config="true" duration-ms="5" started-at="2020-07-29T10:47:29 CAT" finished-at="2020-07-29T10:47:29 CAT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Scripts.SC001_testUserAuthentication.User_Authentication() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="User_Authentication()[pri:0, instance:Scripts.SC001_testUserAuthentication@42dafa95]" name="User_Authentication" duration-ms="39122" started-at="2020-07-29T10:47:29 CAT" finished-at="2020-07-29T10:48:09 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_Authentication -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Scripts.SC001_testUserAuthentication@42dafa95]" name="afterTest" is-config="true" duration-ms="744" started-at="2020-07-29T10:48:09 CAT" finished-at="2020-07-29T10:48:09 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:Scripts.SC001_testUserAuthentication@42dafa95]" name="afterClass" is-config="true" duration-ms="544" started-at="2020-07-29T10:48:09 CAT" finished-at="2020-07-29T10:48:10 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Scripts.SC001_testUserAuthentication -->
      <class name="Scripts.SC003_testCheckAccountWithdrawal">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:Scripts.SC003_testCheckAccountWithdrawal@402a079c]" name="beforeClass" is-config="true" duration-ms="6005" started-at="2020-07-29T10:49:29 CAT" finished-at="2020-07-29T10:49:35 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="Check_Account_Withdrawal()[pri:0, instance:Scripts.SC003_testCheckAccountWithdrawal@402a079c]" name="Check_Account_Withdrawal" duration-ms="80623" started-at="2020-07-29T10:49:35 CAT" finished-at="2020-07-29T10:50:56 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Check_Account_Withdrawal -->
        <test-method status="PASS" signature="method(java.lang.reflect.Method)[pri:0, instance:Scripts.SC003_testCheckAccountWithdrawal@402a079c]" name="method" is-config="true" duration-ms="0" started-at="2020-07-29T10:49:35 CAT" finished-at="2020-07-29T10:49:35 CAT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Scripts.SC003_testCheckAccountWithdrawal.Check_Account_Withdrawal() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Scripts.SC003_testCheckAccountWithdrawal@402a079c]" name="afterTest" is-config="true" duration-ms="722" started-at="2020-07-29T10:50:56 CAT" finished-at="2020-07-29T10:50:57 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:Scripts.SC003_testCheckAccountWithdrawal@402a079c]" name="afterClass" is-config="true" duration-ms="118" started-at="2020-07-29T10:50:57 CAT" finished-at="2020-07-29T10:50:57 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Scripts.SC003_testCheckAccountWithdrawal -->
      <class name="Scripts.SC002_testSavingsAccountDeposit">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:Scripts.SC002_testSavingsAccountDeposit@6500df86]" name="beforeClass" is-config="true" duration-ms="5734" started-at="2020-07-29T10:48:10 CAT" finished-at="2020-07-29T10:48:16 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="method(java.lang.reflect.Method)[pri:0, instance:Scripts.SC002_testSavingsAccountDeposit@6500df86]" name="method" is-config="true" duration-ms="1" started-at="2020-07-29T10:48:16 CAT" finished-at="2020-07-29T10:48:16 CAT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Scripts.SC002_testSavingsAccountDeposit.Savings_Account_Deposits() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="Savings_Account_Deposits()[pri:0, instance:Scripts.SC002_testSavingsAccountDeposit@6500df86]" name="Savings_Account_Deposits" duration-ms="72820" started-at="2020-07-29T10:48:16 CAT" finished-at="2020-07-29T10:49:28 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Savings_Account_Deposits -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Scripts.SC002_testSavingsAccountDeposit@6500df86]" name="afterTest" is-config="true" duration-ms="799" started-at="2020-07-29T10:49:28 CAT" finished-at="2020-07-29T10:49:29 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:Scripts.SC002_testSavingsAccountDeposit@6500df86]" name="afterClass" is-config="true" duration-ms="87" started-at="2020-07-29T10:49:29 CAT" finished-at="2020-07-29T10:49:29 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Scripts.SC002_testSavingsAccountDeposit -->
      <class name="Scripts.SC004_testUserRegistration">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:Scripts.SC004_testUserRegistration@59ec2012]" name="beforeClass" is-config="true" duration-ms="5653" started-at="2020-07-29T10:50:57 CAT" finished-at="2020-07-29T10:51:02 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="method(java.lang.reflect.Method)[pri:0, instance:Scripts.SC004_testUserRegistration@59ec2012]" name="method" is-config="true" duration-ms="1" started-at="2020-07-29T10:51:02 CAT" finished-at="2020-07-29T10:51:02 CAT">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Scripts.SC004_testUserRegistration.User_Registration() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method -->
        <test-method status="PASS" signature="User_Registration()[pri:0, instance:Scripts.SC004_testUserRegistration@59ec2012]" name="User_Registration" duration-ms="21918" started-at="2020-07-29T10:51:02 CAT" finished-at="2020-07-29T10:51:24 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- User_Registration -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:Scripts.SC004_testUserRegistration@59ec2012]" name="afterTest" is-config="true" duration-ms="701" started-at="2020-07-29T10:51:24 CAT" finished-at="2020-07-29T10:51:25 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:Scripts.SC004_testUserRegistration@59ec2012]" name="afterClass" is-config="true" duration-ms="104" started-at="2020-07-29T10:51:25 CAT" finished-at="2020-07-29T10:51:25 CAT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- Scripts.SC004_testUserRegistration -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
